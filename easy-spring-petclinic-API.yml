apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: easyspringpetclinic
  description: The spring-petclinic API
  tags:
    - failing
    - owner
    - pet
    - vet
    - visit
  links:
    - url: http://spring-petclinic.cnr.tap.tanzu.vxlab.local/api
      title: GitHub Repo
      icon: github
spec:
  lifecycle: experimental
  owner: teamacic
  definition: |
openapi: 3.0.1
info:
  title: Spring PetClinic
  description: Spring PetClinic Sample Application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: '1.0'
servers:
- url: http://spring-petclinic.cnr.tap.tanzu.vxlab.local/api
tags:
- name: failing
  description: Endpoint which always returns an error.
- name: owner
  description: Endpoints related to pet owners.
- name: pet
  description: Endpoints related to pets.
- name: vet
  description: Endpoints related to vets.
- name: visit
  description: Endpoints related to vet visits.
paths:
  /owner:
    get:
      tags:
      - owner
      operationId: listOwners
      summary: Lists pet owners
      description: Returns an array of pet owners.
      parameters:
      - name: lastName
        in: query
        description: Last name.
        required: false
        schema:
          type: string
          example: Davis
      - name: If-None-Match
        in: header
        description: A list of ETags of the responses the client has cached.
        schema:
          type: string
      responses:
        200:
          description: Owner details found and returned.
          headers:
            ETag:
              description: An ID for this version of the response.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/owner'
  /owner/{ownerId}:
    get:
      tags:
      - owner
      operationId: getOwner
      summary: Get a pet owner by ID
      description: Returns the pet owner or a 404 error.
      parameters:
      - name: ownerId
        in: path
        description: The ID of the pet owner.
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
          example: 1
      - name: If-None-Match
        in: header
        description: A list of ETags of the responses the client has cached.
        schema:
          type: string
      responses:
        200:
          description: Owner details found and returned.
          headers:
            ETag:
              description: An ID for this version of the response.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/owner'
  /owner/{ownerId}/pet/{petId}:
    get:
      tags:
      - pet
      operationId: getPet
      summary: Get a pet by ID
      description: Returns the pet or a 404 error.
      parameters:
      - name: ownerId
        in: path
        description: The ID of the pet owner.
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
          example: 1
      - name: petId
        in: path
        description: The ID of the pet.
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
          example: 1
      - name: If-None-Match
        in: header
        description: A list of ETags of the responses the client has cached.
        schema:
          type: string
      responses:
        200:
          description: Pet details found and returned.
          headers:
            ETag:
              description: An ID for this version of the response.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/pet'
  /pet-type:
    get:
      tags:
      - pet
      operationId: listPetTypes
      summary: Lists pet types
      description: Returns an array of pet types.
      parameters:
      - name: If-None-Match
        in: header
        description: A list of ETags of the responses the client has cached.
        schema:
          type: string
      responses:
        200:
          description: Pet types found and returned.
          headers:
            ETag:
              description: An ID for this version of the response.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/PetType'
  /vet:
    get:
      tags:
      - vet
      operationId: listVets
      summary: Lists vets
      description: Returns an array of vets.
      parameters:
      - name: If-None-Match
        in: header
        description: A list of ETags of the responses the client has cached.
        schema:
          type: string
      responses:
        200:
          description: Vets found and returned.
          headers:
            ETag:
              description: An ID for this version of the response.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/vet'